---
import Layout from '../layouts/Layout.astro';
import YouTubeThumbnailView from '../components/YouTubeThumbnailView';
import { fetchUpcomingLive } from '../utils/fetchUpcomingLive';

export const revalidate = 3600; // 1時間ごとに再生成
export const prerender = false; // SSRで動的に生成する

// 直接ユーティリティ関数を呼び出してデータを取得
const events = await fetchUpcomingLive();
const scheduleVideoId = "4EYVsybC-gE";
---

<Layout title="スケジュール">
  <div>
    <h1 class="text-2xl font-bold mb-4">Weekly Schedule</h1>
    <YouTubeThumbnailView videoId="4EYVsybC-gE" width={480} height={270} quality="max" />
  </div>
  <div>
    <h1 class="text-2xl font-bold mb-4">Upcoming..</h1>
    {events.length === 0 ? (
      <p>現在、配信予定のライブはありません。</p>
    ) : ( 
      <ul class="space-y-4">
        {events.map((item: any) => (
          item.id.videoId != scheduleVideoId &&
          <li key={item.id.videoId} class="border p-4 rounded shadow">
            <a 
              href={`https://www.youtube.com/watch?v=${item.id.videoId}`} 
              target="_blank" 
              rel="noopener noreferrer"
              class="flex flex-col gap-2"
            >
              <img
                src={item.snippet.thumbnails.high.url}
                alt={item.snippet.title}
                class="w-64 h-auto object-cover rounded"
              />
              <div>
                <h2 class="text-lg font-bold">{item.snippet.title}</h2>
                <p class="text-sm text-gray-600">{item.snippet.description}</p>
              </div>
            </a>
            <p class="text-xs text-gray-500 mt-2">
              公開予定日時: {item.snippet.publishedAt}
            </p>
          </li>
        ))}
      </ul>
    )}
  </div>
</Layout>
